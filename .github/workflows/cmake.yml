name: CI

on:
  push:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  linux:
    name: ${{ matrix.os }}.${{ matrix.compiler.compiler }}.${{ matrix.build-type }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        os: [ linux ]
        compiler:
          - { compiler: gcc,  CC: gcc-13,   CXX: g++-13 }
          - { compiler: clang, CC: clang-18, CXX: clang++-18 }
        build-type: [ Release ]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      env:
        CC: ${{ matrix.compiler.CC }}
        CXX: ${{ matrix.compiler.CXX }}
        SRC_DIR: ${{ github.workspace }}
        BUILD_DIR: ${{ github.workspace }}/build
        INSTALL_PREFIX: ${{ github.workspace }}/install
        BUILD_TYPE: ${{ matrix.build-type }}
      run: |
        cmake -B $BUILD_DIR -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DATZUBI_TASKPOOL_BUILD_TESTS=1
        cmake --build $BUILD_DIR --config $BUILD_TYPE
    - name: Test
      run: |
        ./build/tests/Tests
  

  windows:
    name: ${{ matrix.os }}.${{ matrix.msys2.msystem }}.${{ matrix.compiler.compiler }}.${{ matrix.build-type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        msys2:
          - { msystem: mingw64, arch: x86_64 }
        compiler:
          - { compiler: gcc,  CC: gcc,   CXX: g++ }
          - { compiler: clang, CC: clang, CXX: clang++ }
        build-type: [ Release ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msys2.msystem }}
          install: pacman-mirrors bash curl git base-devel mingw-w64-${{ matrix.msys2.arch }}-toolchain mingw-w64-${{ matrix.msys2.arch }}-gcc mingw-w64-${{ matrix.msys2.arch }}-clang mingw-w64-${{ matrix.msys2.arch }}-cmake mingw-w64-${{ matrix.msys2.arch }}-ninja
          update: true
      - name: Build
        env:
          CC: ${{ matrix.compiler.CC }}
          CXX: ${{ matrix.compiler.CXX }}
          SRC_DIR: ${{ github.workspace }}
          BUILD_DIR: ${{ github.workspace }}/build
          INSTALL_PREFIX: ${{ github.workspace }}/install
          BUILD_TYPE: ${{ matrix.build-type }}
        run: |
          cmake -B $BUILD_DIR -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DATZUBI_TASKPOOL_BUILD_TESTS=1
          cmake --build $BUILD_DIR --config $BUILD_TYPE
      - name: Test
        run: |
          ./build/tests/Tests.exe
  

  macos:
    name: ${{ matrix.os }}.${{ matrix.compiler.compiler }}.${{ matrix.build-type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        compiler:
          - { compiler: gcc,  CC: gcc-13,   CXX: g++-13 }
        build-type: [ Release ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        env:
          CC: ${{ matrix.compiler.CC }}
          CXX: ${{ matrix.compiler.CXX }}
          SRC_DIR: ${{ github.workspace }}
          BUILD_DIR: ${{ github.workspace }}/build
          INSTALL_PREFIX: ${{ github.workspace }}/install
          BUILD_TYPE: ${{ matrix.build-type }}
        run: |
          cmake -B $BUILD_DIR -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DATZUBI_TASKPOOL_BUILD_TESTS=1
          cmake --build $BUILD_DIR --config $BUILD_TYPE
      - name: Test
        run: |
          ./build/tests/Tests
